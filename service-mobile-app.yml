server:
  port: '8081'
bucket:
  public: '${$BUCKET_PUBLIC:tenant-public}'
cloud:
  aws:
    region:
      static: us-east-1
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID:}
      secretKey: ${AWS_SECRET_KEY:}
spring:
    application:
        name: tenantrest
    profiles:
        # The commented value for `active` can be replaced with valid Spring profiles to load.
        # Otherwise, it will be filled in by maven when building the WAR file
        # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
        active: #spring.profiles.active#
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:mysql://${TEA_DB_URL}/${TEA_DATABASE_NAME}?useUnicode=true&characterEncoding=utf8&useSSL=false&zeroDateTimeBehavior=convertToNull&allowPublicKeyRetrieval=true
        username: ${TEA_DB_USER}
        password: ${TEA_DB_PASSWORD}
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.cache.region.factory_class: io.github.jhipster.config.jcache.BeanClassLoaderAwareJCacheRegionFactory
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy      
